---
layout: default
---

<style>
  nav ul li {
    display:none;
  }
  nav ul li.active {
    display:initial;
  }
  h3 {
    display:none;
  }
  
  #bar {
    background-color: #f5f5f5;
    width: 100%;
    clear: both;
    height: 1.5em;
    overflow: visible;
  }
  #progress {
    font-size: 16px;
    height: 1.5em;
    width: 0;
    overflow: visible;
    background-color: #d0d0d0;
  }
  #progress a {
    color: #000000;
  }
  #pl {
    float: right;
    height: 1.5em;
    margin-bottom: -1.5em;
    margin-right: 12px;
  }
  #playlist {
    width: 100%;
    clear: both;
    position: absolute;
    visibility: hidden;
  }
  
  .tl-storyslider, .tl-timeline {
  height: 400px;
  }
  #tl {
    clear:both;
    height:400px;
  }
  #t {
    float: right;
  }
</style>

<h3>Songs</h3>

<a id="t" href="/notes/"><i class="material-icons notranslate">rtt</i></a>

<audio id="audio" onended="stopPlayback();">
  <source src="/assets/mp3/nightingale_bird.mp3" type="audio/mpeg">
  <embed src="https://freealise.com/assets/mp3/album.mp3" type="audio/mpeg" height="32" width="256"></embed>
</audio>

    <a id="pl" href="javascript:showPlaylist();" title="Playlist"><i class="material-icons notranslate">queue_music</i></a>
    <div id="bar">
      <div id="progress">
        <a href="javascript:if(pb.innerText!='pause'){startPlayback();}else{stopPlayback();}" title="Play | Pause">
          <i id="pb" class="material-icons notranslate">play_arrow</i>
        </a>
      </div>
      <div id="playlist"></div>
    </div>
    <script src='https://www.gstatic.com/charts/loader.js' type='text/javascript'></script>
    <script type="text/javascript">
      var pb = document.getElementById('pb');
      var _t;
      function startPlayback() {
        audio.play();
        pb.innerText = 'pause';
        _t = setInterval(function(){
          var c = parseInt(document.getElementById('audio').currentTime);
          var d = parseInt(document.getElementById('audio').duration);
          document.getElementById('progress').style.width = 100 * c / d + "%"; 
        }, 1000);
      }
      function stopPlayback() {
        audio.pause();
        pb.innerText = 'play_arrow';
        clearInterval(_t);
      }
      
      var playlist = document.getElementById('playlist');
      playlist.style.visibility = 'hidden';
      function showPlaylist() {
        if (playlist.style.visibility != 'hidden') {
          playlist.style.visibility = 'hidden';
        } else {
          playlist.style.visibility = 'visible';
        }
      }
      
      var audio = document.getElementById('audio');
      google.charts.load('current', {'packages':['timeline']});
      google.charts.setOnLoadCallback(drawChart);
      function drawChart() {
        var chart = new google.visualization.Timeline(playlist);
        var dataTable = new google.visualization.DataTable();
        
        var options = {
          width: '100%',
          chartArea: {
            width: '100%'
          },
          timeline: { barLabelStyle: { fontName: 'Averia Serif Libre', fontSize: 12 }, showRowLabels: false, singleColor: '#cccccc' },
          hAxis: { format: ' ' }
        };
        var min = 60000;
        var sec = 1000;

        dataTable.addColumn({ type: 'string', id: 'Number' });
        dataTable.addColumn({ type: 'string', id: 'Song' });
        dataTable.addColumn({ type: 'datetime', id: 'Start' });
        dataTable.addColumn({ type: 'datetime', id: 'End' });
        dataTable.addRows([
          [ '1', 'Nightingale', new Date(0), new Date(1*min+39*sec) ],
          [ '2', 'Skylark', new Date(1*min+39*sec),  new Date(2*min+59*sec) ],
          [ '3', 'Parrot', new Date(2*min+59*sec),  new Date(3*min+59*sec) ]
        ]);
   
        function selectHandler() {
          var selectedItem = chart.getSelection()[0];
          if (selectedItem) {
            audio.currentTime = dataTable.getValue(selectedItem.row, 2).getTime() / 1000;
            startPlayback();
          }
        }

        google.visualization.events.addListener(chart, 'select', selectHandler); 
        chart.draw(dataTable, options);
      }
    </script>


<div id="tl" class="skiptranslate">
  <link title="timeline-styles" rel="stylesheet" href="https://cdn.knightlab.com/libs/timeline3/latest/css/timeline.css" type="text/css" />
  <div id="timeline-embed"></div>
</div>

<script src="https://cdn.knightlab.com/libs/timeline3/latest/js/timeline.js"></script>
<script src="/assets/js/tl.js"></script>
<script type="text/javascript">
      function loadTl() {
        var options = {
          skinny_size: 480,
          hash_bookmark: true,
          language: "en"
        }
        // The TL.Timeline constructor takes at least two arguments:
        // the id of the Timeline container (no '#'), and
        // the URL to your JSON data file or Google spreadsheet.
        // the id must refer to an element "above" this code,
        // and the element must have CSS styling to give it width and height
        // optionally, a third argument with configuration options can be passed.
        // See below for more about options.
        timeline = new TL.Timeline('timeline-embed', json, options);
      }
      loadTl();
</script>
